//recursion
int mod=(int)(1e9+7);
int helper(int i,int j,vector< vector< int> > &mat){
    if(i>=0&&j>=0&&mat[i][j]==-1) return 0;
    if(i==0&&j==0) return 1;
    if(i<0||j<0) return 0;
    int up=helper(i-1,j,mat)%mod;
    int left=helper(i,j-1,mat)%mod;
    return (up+left)%mod;
}
int mazeObstacles(int n, int m, vector< vector< int> > &mat) {
    return helper(n-1,m-1,mat);
}
/DP
int mod=(int)(1e9+7);
int mazeObstacles(int n, int m, vector< vector< int> > &mat) {
    vector<vector<int>> dp(n,vector<int>(m,0));
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(mat[i][j]==-1) dp[i][j]=0;
            else if(i==0&&j==0) dp[i][j]=1;
            else {
              int left = 0, up = 0;
              if (i > 0) up = dp[i - 1][j]%mod;
              if (j > 0) left = dp[i][j - 1]%mod;
              dp[i][j] = (left + up)%mod;
            }
        }
    }
    return dp[n-1][m-1]%mod;
}
