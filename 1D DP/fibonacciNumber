#include<iostream>
#include<vector>
#include<bits/stdc++.h>
using namespace std;
int fibo(int n){
    if(n<=1){
        return n;
    }
    return fibo(n-1)+fibo(n-2);
}
int fibo_2(int n,vector<int> &dp){
    if(n<=1){
        return n;
    }
    if(dp[n]!=-1){
        return dp[n];
    }
    return dp[n] = fibo_2(n-1,dp) + fibo_2(n-2,dp);
}
int fibo_3(int n){
    vector<int> dp2(n);
    dp2[0]=0;
    dp2[1]=1;
    for(int i=2;i<=n;i++){
        dp2[i]=dp2[i-1]+dp2[i-2];
    }
    return dp2[n];
}
int fibo_4(int n){
    int a=0;
    int b=1;
    int c;
    for(int i=2;i<=n;i++){
        c=a+b;
        a=b;
        b=c;
    }
    return c;
}
int main(){
    int n;
    cout<<"Enter the number : ";
    cin>>n;
    cout<<"Recursion answer : "<<fibo(n)<<endl;
    vector<int> dp(n+1,-1);
    cout<<"Memoziation answer : "<<fibo_2(n,dp)<<endl;
    cout<<"Tabulation answer :  "<<fibo_3(n)<<endl;
    cout<<"Space Optimized:  "<<fibo_4(n)<<endl;

    return 0;
}
