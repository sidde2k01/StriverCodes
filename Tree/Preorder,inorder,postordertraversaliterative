/* Tree Node
struct Node {
    int data;
    Node* left;
    Node* right;
};*/
class Solution{
    public:
    vector<int> postOrder(Node* node) {
        vector<int> preorder;
        vector<int> inorder;
        vector<int> postorder;
        if(node==NULL) return postorder;
        stack<pair<Node*,int>> st;
        st.push({node,1});
        while(!st.empty()){
            auto it=st.top();
            st.pop();
            if(it.second==1){
                preorder.push_back(it.first->data);
                it.second++;
                st.push(it);
                if(it.first->left!=NULL){
                    st.push({it.first->left,1});
                }
            }
            else if(it.second==2){
                inorder.push_back(it.first->data);
                it.second++;
                st.push(it);
                if(it.first->right!=NULL){
                    st.push({it.first->right,1});
                }
            }
            else{
                postorder.push_back(it.first->data);
            }
        }
        return postorder;
    }
};
